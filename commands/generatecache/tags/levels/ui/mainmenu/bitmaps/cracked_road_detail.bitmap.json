{
  "TagName": "levels\\ui\\mainmenu\\bitmaps\\cracked_road_detail",
  "TagType": "bitmap",
  "TagVersion": "HaloOnlineED",
  "Bitmaps": {
    "Textures": [
      {
        "Texture": {
          "Definition": {
            "PrimaryResourceData": "",
            "SecondaryResourceData": null,
            "Bitmap": {
              "Width": 256,
              "Height": 256,
              "Depth": 1,
              "MipmapCount": 9,
              "BitmapType": "Texture2D",
              "HighResInSecondaryResource": 0,
              "D3DFormat": 0,
              "Format": "Y8",
              "Curve": "Linear",
              "Flags": "PowerOfTwoDimensions",
              "Unknown1": 0,
              "Unknown2": 0
            }
          },
          "AddressType": "Definition"
        }
      }
    ],
    "InterleavedTextures": null
  },
  "Animations": null,
  "RenderGeometry": null,
  "BlamScriptResource": null,
  "StructureBsp": null,
  "Sounds": null,
  "UnicodeStrings": null,
  "TagData": {
    "Usage": "DetailMap",
    "Flags": "UsingTagInteropAndTagResource",
    "SpriteSpacing": 4,
    "BumpMapHeight": 5.0,
    "FadeFactor": 0.5,
    "CurveMode": "ChooseBest",
    "MaxMipMapLevel": 0,
    "MaxResolution": 0,
    "AtlasIndex": 0,
    "ForceBitmapFormat": 29,
    "TightBoundsOld": [],
    "UsageOverrides": [],
    "ManualSequences": [],
    "SourceData": "",
    "ProcessedPixelData": "",
    "Sequences": [],
    "Images": [
      {
        "Signature": "bitm",
        "Width": 256,
        "Height": 256,
        "Depth": 1,
        "XboxFlags": "None",
        "Type": "Texture2D",
        "Format": "Y8",
        "Flags": "PowerOfTwoDimensions",
        "RegistrationPoint": "X: 0, Y: 0",
        "MipmapCount": 8,
        "Curve": "Linear",
        "InterleavedInterop": 0,
        "InterleavedTextureIndex": 0,
        "PixelDataOffset": 0,
        "PixelDataSize": 87381,
        "HighResPixelsOffsetOffset": 0,
        "HighResPixelsSize": 65536,
        "HardwareFormat": -1,
        "RuntimeTagBaseAddress": {
          "Value": 0
        }
      }
    ],
    "XenonBitmaps": "",
    "XenonImages": [],
    "UnknownB4": 0
  }
}